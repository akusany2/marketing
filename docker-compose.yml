version: "3.3"

services:
  web:
    build:
      context: ./marketing-frontend
      dockerfile: Dockerfile
    volumes:
      - ./marketing-frontend:/web
    ports:
      - "4200:4200"
    expose:
      - 4200
  api:
    build:
      context: ./marketing-backend
      dockerfile: Dockerfile
    volumes:
      - ./marketing-backend:/api
      # args:
      #   - NODE_ENV=development
    # environment:
    #   - PORT=3000
    #   - DB_HOST=postgres
    #   - DB_PORT=5432
    #   - DB_USER=postgres
    #   - DB_PW=asdf
    ports:
      - "3000:3000"
      - "9229:9229"
    expose:
      - 3000
    depends_on:
      - mongo
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    # depends_on:
    #   - postgres
    # links:
    #   - postgres:postgres
    # volumes:
    #   - type: bind
    #     source: ./marketing-backend
    #     target: /api
    # command: npm run start:dev
  # postgres:
  #   image: postgres:alpine
  #   restart: always
  #   environment:
  #     - DB_USER=postgres
  #     - DB_PASS=asdf
  #   ports:
  #     - 5432:5432
  #   expose:
  #     - "5432"
  # pgadmin:
  #   container_name: pgadmin_container
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #   volumes:
  #     - pgadmin:/root/.pgadmin
  #   ports:
  #     - "${PGADMIN_PORT:-5050}:80"
  #   networks:
  #     - postgres
  #   restart: unless-stopped
# networks:
#   postgres:
#     driver: bridge
